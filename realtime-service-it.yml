### Common

server:
  port: 8092
  servlet:
    context-path: /realtime    
base-url: http://localhost:${server.port}/${server.servlet.context-path}  
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ 
keycloak-client:
  server-url: '{cipher}389c8973f3761753b30608c9d44dc57da405b808e1434b8af37c3af740dbf4daeeeca5bb689f19e1953399c0b471da44'
  realm:  Smartcity
    
spring:
  resources:
    add-mappings: false
  main:
    allow-bean-definition-overriding: true
  mvc:
    throw-exception-if-no-handler-found: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: realtime-service
            client-secret: f127b769-f8f8-44e0-af16-735497f677d5
            authorization-grant-type: authorization_code
            redirect-uri: ${base-url}/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs    
  
app:
  kafka:
    bootstrap-servers: '{cipher}f32c8a6e07ea3f99c25a5247ebbad973b0438151c1217eee35f7ca4d06a56fbc87be78c0e3255a4ea04de8ee9bc481f0'
    consumer:
      group-id: iot
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.jdvn.smartcity.tamky.util.TemperatureSensorDataMessageDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.jdvn.smartcity.tamky.util.TemperatureSensorDataMessageSerializer
    topic:
      temperature-sensor: TrackTemperature

  influxdb:
    url: '{cipher}39a1483f6a24a5b461f2924ffe932d7586f978311eb884e76957caa991c29d50db40b94f1fabce7fb4b30e4089899722'
    user: '{cipher}ac893a6a30ee73c2ae33e5170f8f892d43cee0afb9492b97d1a2a6412a67e171'
    pass: '{cipher}2284427cd4a117909160a98822365807a94ba9e62b4e7729445849958818c529'
    database: sensordata
    retention-policy: autogen
    read-timeout-in-seconds: 100
  
logging:
  level:
    root: INFO
    com.jdvn.smartcity.tamky: INFO
